<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<object-views xmlns="http://axelor.com/xml/ns/object-views"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://axelor.com/xml/ns/object-views https://axelor.com/xml/ns/object-views/object-views_7.4.xsd">

  <grid name="wkf-model-grid" title="BPM Model" model="com.axelor.studio.db.WkfModel"
    orderBy="code" edit-icon="false">
    <menubar>
      <menu title="Technical menu" icon="tools" name="toolsMenu">
        <item title="Export wkf" action="action-wkf-model-export-wkf-models"/>
        <item title="Import wkf" action="action-wkf-model-view-import-wkf-model-form"/>
        <divider/>
        <item title="Terminate all the processes" name="terminateAllProcessesBtn"
          action="action-wkf-model-method-terminate-all-processes"
          prompt="Are you sure you want to terminate all the processes?"/>
      </menu>
      <menu title="Merge and split feature" icon="splitscreen" name="mergeAndSplitMenu">
        <item title="Merging editor"
          action="action-validate-merge-reqs,action-wkf-model-open-merge-tool-editor"/>
        <item title="Splitting editor"
          action="action-validate-split-reqs,action-wkf-model-open-split-tool-editor"/>
      </menu>
    </menubar>

    <button name="openEditorBtn" title="wkf.open.editor"
      onClick="action-wkf-view-open-editor" icon="pencil-square"/>
    <field name="code" x-bind="{{code|unaccent|uppercase}}"/>
    <field name="name"/>
    <field name="versionTag"/>
    <field name="statusSelect"/>
    <field name="studioApp" grid-view="studio-app-grid" form-view="studio-app-form"
      if="__config__.app?.getApp('studio')?.getEnableStudioApp()"/>
  </grid>

  <form name="wkf-model-form" title="BPM Model" model="com.axelor.studio.db.WkfModel"
    width="large" onLoad="action-wkf-model-method-onload">
    <panel name="mainPanel" colSpan="12">
      <field name="statusSelect" widget="NavSelect" colSpan="12" readonly="true"/>
      <field name="code" x-bind="{{code|unaccent|uppercase}}"
        readonlyIf="generatedFromCallActivity"/>
      <field name="name" required="true"/>
      <field name="studioApp" grid-view="studio-app-grid" form-view="studio-app-form"
        if="__config__.app?.getApp('studio')?.getEnableStudioApp()"/>
      <field name="versionTag" readonly="true"/>
      <field name="wkfStatusColor" widget="SingleSelect"/>
      <field name="newVersionOnDeploy"/>
    </panel>
    <panel-tabs>
      <panel name="allProcessPanel" title="All Processes">
        <panel-dashlet action="custom:wkf-model-process-per-status-custom"
          name="wkfModelProcessPerStatusPanel" height="400" colSpan="12"/>
      </panel>
      <panel name="myProcessPanel" title="My processes">
        <panel-dashlet action="custom:wkf-model-process-per-user-custom"
          name="wkfModelProcessPerUserPanel" height="400" colSpan="12"/>
      </panel>
      <panel name="permissionPanel" title="Permissions">
        <panel name="adminPanel" title="Admins" groups="admins" colSpan="12" itemSpan="6">
          <field name="sendAdminsNotification" colSpan="12"/>
          <field name="adminUserSet"/>
          <field name="adminRoleSet"/>
        </panel>
        <panel name="managerPanel" title="Managers" colSpan="12" itemSpan="6">
          <field name="sendManagerNotification" colSpan="12"/>
          <field name="managerUserSet"/>
          <field name="managerRoleSet"/>
        </panel>
        <panel name="userPanel" title="Users" colSpan="12" itemSpan="6">
          <field name="sendUserNotification" colSpan="12"/>
          <field name="userSet"/>
          <field name="roleSet"/>
        </panel>
      </panel>
    </panel-tabs>
    <panel name="extraPanel">
      <field name="wkfProcessList" colSpan="12" canNew="false" canRemove="true"/>
      <field name="description" colSpan="12"/>
      <panel-dashlet hidden="true" action="action-wkf-model-method-show-versions"
        name="wkfModelVersionDashlet" title="Previous Versions" colSpan="12"/>
      <field name="isActive" hidden="true"/>
      <field name="previousVersion" hidden="true"/>
      <field name="generatedFromCallActivity" hidden="true"/>
      <field name="previousVersion.statusSelect" hidden="true"/>
      <panel-related field="wkfTaskConfigList" colSpan="12" hidden="true"/>
      <panel-related field="dmnFileSet" colSpan="12" hidden="true"/>
    </panel>
    <panel name="actionPanelBtn" sidebar="true" stacked="true">
      <!-- <button name="startBtn" title="Start" onClick="save,action-wkf-model-method-start" showIf="statusSelect
        == 1 &amp;&amp; isActive &amp;&amp; (previousVersion == null || previousVersion.statusSelect == 3)"/> -->
      <!-- <button name="startBtn" title="Start" onClick="save,action-wkf-model-method-start" prompt="It
        will terminate previous version. Are you sure wants to start?" showIf="statusSelect == 1 &amp;&amp; isActive
        &amp;&amp; previousVersion != null &amp;&amp; previousVersion.statusSelect != 3"/> -->
      <button name="importFromSourcesBtn"
        if="__config__.app.getApp('bpm')?.getAllowBpmLoadingFromSources()"
        title="Import from sources" onClick="save,action-wkf-model-method-import-from-sources"/>
      <button name="terminateBtn" title="wkf.terminate.btn"
        onClick="save,action-wkf-model-method-terminate"
        showIf="statusSelect == 2 &amp;&amp; isActive"/>
      <button name="backToDraftBtn" title="Back to Draft"
        onClick="save,action-wkf-model-method-back-to-draft"
        showIf="statusSelect == 3  &amp;&amp; isActive"/>
      <button name="openEditorBtn" title="wkf.open.editor"
        onClick="save,action-wkf-view-open-editor"/>
      <button name="openWkfStateBtn" title="BPM State"
        onClick="save,action-wkf-model-display-wkf-state"/>
      <button name="openDashboardBtn" title="Dashboard"
        onClick="save,action-wkf-model-method-show-dashboard" showIf="id"/>
      <button name="openInstanceBtn" title="All instances"
        onClick="save,action-wkf-model-view-show-instance" showIf="id"/>
      <button name="unblockInstancesBtn" title="Unblock all instances"
        onClick="save, action-wkf-model-method-unblock-instances" showIf="id"/>
    </panel>
  </form>

  <form name="import-wkf-model-form" title="Import workflow models"
    model="com.axelor.studio.db.WkfModel">
    <panel name="mainPanel">
      <field name="dataFile" type="many-to-one" target="com.axelor.meta.db.MetaFile"
        widget="binary-link" title="XML data file"/>
      <field name="translate" title="Translate" type="boolean"
        onChange="action-wkf-model-record-set-source-language"/>
      <field name="sourceLanguageSelect" type="string" selection="select.language"
        title="Source language" selection-in="['en','fr']" requiredIf="translate" showIf="translate"/>
      <field name="targetLanguageSelect" type="string" selection="select.language"
        title="Target language" selection-in="['en','fr']" requiredIf="translate" showIf="translate"/>
      <button name="importUsersBtn" title="import.verb"
        onClick="action-wkf-model-method-import-wkf-model"
        showIf="dataFile != null &amp;&amp; (!translate || (translate &amp;&amp; sourceLanguageSelect != null &amp;&amp; targetLanguageSelect != null))"/>
      <field name="importLog" type="text" colSpan="12" readonly="true" title="Import log"/>
    </panel>
  </form>

  <action-method name="action-wkf-model-method-terminate-all-processes">
    <call class="com.axelor.studio.bpm.web.WkfModelController" method="terminateAllProcesses"/>
  </action-method>

  <form name="wfk-model-select-process-wizard-form" title="Select process"
    model="com.axelor.utils.db.Wizard">
    <panel>
      <field name="process" onSelect="action-select-process-wizard-attrs-set-process-domain"
        title="Process" type="string" widget="ref-text" x-target="com.axelor.studio.db.WkfProcess"
        x-target-name="name"/>
      <button onClick="action-wkf-model-view-dashboard,close" name="showDashboardBtn"
        title="Show" showIf="process != null"/>
    </panel>
  </form>

  <custom name="wkf-model-process-per-status-custom" title="">
    <dataset type="rpc">
			<![CDATA[
				com.axelor.studio.bpm.web.WkfModelController:getProcessPerStatus
			]]>
    </dataset>
    <template>
			<![CDATA[
	 			<>
 				<div style={{ display: "flex", flexDirection: "column", width: "100%" }}>
 					{data?.map((process, i) => (
 					<Table key={i}>
 					<TableHead>
 					<TableRow>
 						<th>{process?.title}</th>
 					</TableRow>
 					</TableHead>
 					<TableBody>
 						{process?.itemList?.map((item, i) => (
 						<TableRow key={i}>
 							{item.type === "model" && (
 							<TableCell style={{ paddingLeft: 20 }}>
 								<a style={{ fontWeight: "bold" }} href="" onClick={(e) => {e.preventDefault(); $execute("action-wkf-model-method-model-per-view", item)}}>
 									{_t(`value:${item.title}`) === `value:${item.title}` ? item.title : _t(`value: ${item.title}`)}
 									({item.modelRecordCount})
 								</a>
 								<div style={{padding: "8px 8px 8px 25px", display: "flex", border: "1px solid #ddd", borderLeft: "none", borderRight: "none", marginTop: 8,}}>
 									<div style={{ flex: 1 }}>
 										{item?.statuses?.map((status, i) => (
 											<p key={i} style={{ display: "list-item" }}>
 											<a href="" onClick={(e) => {e.preventDefault(); $execute("action-wkf-model-method-status-per-view", status)}}>
 												{_t(`value:${status.title}`) === `value:${status.title}` ? status.title : _t(`value:${status.title}`)}
 												({status.statusCount})
 											</a>
 											</p>
 										))}
 									</div>
 									<div style={{ flex: 1 }}>
 										<p style={{ display: "list-item" }}>
 											<a href="" onClick={(e) => {e.preventDefault(); $execute("action-wkf-model-method-open-task-today", item.tasks)}}>
 												<span x-translate>Tasks to do today</span> ({item?.tasks?.taskTodayIds?.length})
 											</a>
 										</p>
 									<p style={{ display: "list-item" }}>
 										<a href="" onClick={(e) => {e.preventDefault(); $execute("action-wkf-model-method-open-task-next", item.tasks)}}>
 											<span x-translate>Tasks to do for the next 7 days</span> ({item?.tasks?.taskNextIds?.length})
 										</a>
 									</p>
 									<p style={{ display: "list-item" }}>
 										<a href="" onClick={(e) => {e.preventDefault(); $execute("action-wkf-model-method-open-late-task",item.tasks)}}>
 											<span x-translate>Late tasks</span> ({item?.tasks?.lateTaskIds?.length})
 										</a>
 									</p>
							 	</div>
 							</div>
 						</TableCell>
 						)}
 					</TableRow>
 					))}
 				</TableBody>
 			</Table>
 			))}
 			</div>
			</>
	 	]]>
    </template>
  </custom>

  <custom name="wkf-model-process-per-user-custom" title="">
    <dataset type="rpc">
			<![CDATA[
				com.axelor.studio.bpm.web.WkfModelController:getProcessPerUser
			]]>
    </dataset>
    <template>
			<![CDATA[
	 			<>
  <div style={{ display: "flex", flexDirection: "column", width: "100%" }}>
    {data?.map((process, i) => (
      <Table key={i}>
        <TableHead>
          <TableRow>
            <TableHead>{process.title}</TableHead>
          </TableRow>
          <TableRow>
            <TableCell>
              <span x-translate>Tasks assigned to me</span> (
              {process.taskAssignedToMe})
            </TableCell>
          </TableRow>
        </TableHead>
        <TableBody>
          {process?.itemList?.map((item, i) => (
            <TableRow key={i}>
              {item?.type === "model" && (
                <TableCell style={{ paddingLeft: 20 }}>
                  <a style={{ fontWeight: "bold" }} href="" onClick={(e) =>{ e.preventDefault(); $execute("action-wkf-model-method-model-per-view", item)}}>
                    {_t(`value:${item.title}`) === `value:${item.title}` ? item.title : _t(`value:${item.title}`)}{" "}
                    ({item.modelRecordCount})
                  </a>
                  <div style={{ padding: "8px 8px 8px 25px", display: "flex", borderTop: "1px solid #ddd", marginTop: "8"}}>
                    <div style={{ flex: 1 }}>
                      {item?.statuses?.map((status, i) => (
                        <p key={i} style={{ display: "list-item" }}>
                          <a href="" onClick={(e) => {e.preventDefault(); $execute("action-wkf-model-method-status-per-view", status)}}>
                            {_t(`value:${status.title}`) === `value:${status.title}` ? status.title : _t(`value:${status.title}`)}
                            ({status.statusCount})
                          </a>
                        </p>
                      ))}
                    </div>
                    <div style={{ flex: 1 }}>
                      <p style={{ display: "list-item" }}>
                        <a href="" onClick={(e) => {e.preventDefault(); $action("action-wkf-model-method-open-task-today", item.tasks)}}>
                          <span x-translate>My Tasks to do today</span> ({item?.tasks?.taskTodayIds?.length})
                        </a>
                      </p>
                      <p style={{ display: "list-item" }}>
                        <a href="" onClick={(e) => {e.preventDefault(); $execute("action-wkf-model-method-open-task-next", item.tasks)}}>
                          <span x-translate>My Tasks to do for the next 7 days</span>
                          ({item?.tasks?.taskNextIds?.length})
                        </a>
                      </p>
                      <p style={{ display: "list-item" }}>
                        <a href="" onClick={(e) => {e.preventDefault(); $execute("action-wkf-model-method-open-late-task", item.tasks)}}>
                          <span x-translate>My Late tasks</span>
                          ({item?.tasks?.lateTaskIds?.length})
                        </a>
                      </p>
                    </div>
                  </div>
                </TableCell>
              )}
              {item.type === "button" && item.isDirectCreation && (
                <TableCell style={{ paddingLeft: 16, fontWeight: "bold" }}>
                  <Button variant="info" m={1} onClick={(e) => {e.preventDefault(); $execute("action-wkf-model-method-open-new-record", item)}}>
                    {_t("New record")}
                  </Button>
                </TableCell>
              )}
            </TableRow>
          ))}
          <TableRow>
            {process.processConfig != null && (
              <TableCell style={{ fontWeight: "bold" }}>
                <Button variant="primary" onClick={(e) => {e.preventDefault(); $execute("action-wkf-model-method-open-new-instance", process)}}>
                  {_t("New instance")}
                </Button>
              </TableCell>
            )}
          </TableRow>
        </TableBody>
      </Table>
    ))}
  </div>
</>
	 		]]>
    </template>
  </custom>

  <action-attrs name="action-select-process-wizard-attrs-set-process-domain">
    <attribute name="domain" for="process"
      expr="eval: _wkf?.wkfProcessList?.size() &gt; 0 ? &quot; self.id IN (${_wkf.wkfProcessList.collect{it.id}?.join(',')}) &quot; : &quot; self.id IN (0) &quot;"/>
  </action-attrs>

  <action-record name="action-wkf-model-record-set-source-language"
    model="com.axelor.studio.db.WkfModel">
    <field name="sourceLanguageSelect" expr="eval: __user__.language"/>
  </action-record>

  <action-view name="action-wkf-view-open-editor" title="BPM Studio">
    <view type="html" name="bpm/index.html?id={{_id}}"/>
  </action-view>

  <action-view name="action-wkf-model-view-import-wkf-model-form"
    title="Import workflow models" model="com.axelor.studio.db.WkfModel">
    <view type="form" name="import-wkf-model-form"/>
    <view-param name="popup" value="reload"/>
    <view-param name="popup-save" value="false"/>
    <view-param name="show-confirm" value="false"/>
    <view-param name="show-toolbar" value="false"/>
  </action-view>

  <action-view name="action-wkf-model-display-wkf-state" title="BPM State">
    <view type="html" name="{{$imageUrl}}"/>
    <context name="$imageUrl"
      expr="call:com.axelor.studio.bpm.service.WkfDisplayService:getWkfNodeCountUrl(__self__)"/>
  </action-view>

  <action-view name="action-wkf-model-view-show-instance" title="All instances"
    model="com.axelor.studio.db.WkfInstance">
    <view type="grid" name="wkf-instance-grid"/>
    <view type="form" name="wkf-instance-form"/>
    <domain>self.id IN (:ids)</domain>
    <context name="ids"
      expr="eval: wkfProcessList?.collect{it.id}?.size() &gt; 0 ? __repo__(WkfInstance).all().filter('self.wkfProcess.id IN ?', wkfProcessList.collect{it.id}?.flatten()).fetch()?.collect{it.id}?.flatten() : 0"/>
  </action-view>

  <action-method name="action-wkf-model-method-onload">
    <call class="com.axelor.studio.bpm.web.WkfModelController" method="changeAttrs"/>
  </action-method>

  <action-method name="action-wkf-model-method-deploy">
    <call class="com.axelor.studio.bpm.web.WkfModelController" method="deploy"/>
  </action-method>

  <action-method name="action-refresh-record">
    <call class="com.axelor.studio.bpm.web.WkfModelController" method="refreshRecord"/>
  </action-method>

  <action-method name="action-wkf-model-method-start">
    <call class="com.axelor.studio.bpm.web.WkfModelController" method="start"/>
  </action-method>

  <action-method name="action-wkf-model-method-terminate">
    <call class="com.axelor.studio.bpm.web.WkfModelController" method="terminate"/>
  </action-method>

  <action-method name="action-wkf-model-method-back-to-draft">
    <call class="com.axelor.studio.bpm.web.WkfModelController" method="backToDraft"/>
  </action-method>

  <action-method name="action-wkf-model-method-create-new-version">
    <call class="com.axelor.studio.bpm.web.WkfModelController" method="createNewVersion"/>
  </action-method>

  <action-method name="action-wkf-model-method-show-versions">
    <call class="com.axelor.studio.bpm.web.WkfModelController" method="showVersions"/>
  </action-method>

  <action-method name="action-wkf-model-method-import-wkf-model">
    <call class="com.axelor.studio.bpm.web.WkfModelController" method="importWkfModels"/>
  </action-method>

  <action-method name="action-wkf-model-method-show-dashboard">
    <call class="com.axelor.studio.bpm.web.WkfDashboardController" method="showDashboard"/>
  </action-method>

  <action-method name="action-wkf-model-method-status-per-view">
    <call class="com.axelor.studio.bpm.web.WkfModelController" method="getStatusPerView"/>
  </action-method>

  <action-method name="action-wkf-model-method-model-per-view">
    <call class="com.axelor.studio.bpm.web.WkfModelController" method="getModelPerView"/>
  </action-method>

  <action-method name="action-wkf-model-method-open-new-record">
    <call class="com.axelor.studio.bpm.web.WkfModelController" method="openNewRecord"/>
  </action-method>

  <action-method name="action-wkf-model-method-open-new-instance">
    <call class="com.axelor.studio.bpm.web.WkfModelController" method="openNewInstance"/>
  </action-method>

  <action-method name="action-wkf-model-method-open-task-today">
    <call class="com.axelor.studio.bpm.web.WkfModelController" method="openTaskToday"/>
  </action-method>

  <action-method name="action-wkf-model-method-open-task-next">
    <call class="com.axelor.studio.bpm.web.WkfModelController" method="openTaskNext"/>
  </action-method>

  <action-method name="action-wkf-model-method-open-late-task">
    <call class="com.axelor.studio.bpm.web.WkfModelController" method="openLateTask"/>
  </action-method>

  <action-method name="action-wkf-model-method-unblock-instances">
    <call class="com.axelor.studio.bpm.web.WkfModelController"
      method="unblockInstanceFromModel"/>
  </action-method>

  <action-export name="action-wkf-model-export-wkf-models" output="${date}${time}"
    download="true">
    <export
      name="${__repo__(WkfModel).find(_ids.get(0))?.name}${__repo__(WkfModel).find(_ids.get(0))?.versionTag ? '-'.concat(__repo__(WkfModel).find(_ids.get(0))?.versionTag) : ''}.xml"
      template="data-export/export-wkf-models.tmpl" engine="groovy"
      if="_ids != null &amp;&amp; _ids.size() == 1"/>
    <export
      name="WkfModels-${__datetime__.format(java.time.format.DateTimeFormatter.ofPattern('ddMMyyyyHHmmSS'))}.xml"
      template="data-export/export-wkf-models.tmpl" engine="groovy"/>
  </action-export>

  <action-view name="action-wkf-model-view-dashboard" title="Workflow dashboard">
    <view type="dashboard" name="dasbhoard-wkf-model"/>
    <context name="_wkfId" expr="eval:_wkf?.id"/>
    <context name="_process" expr="eval: process"/>
  </action-view>

  <action-method name="action-wkf-model-open-split-tool-editor">
    <call class="com.axelor.studio.bpm.web.WkfModelController" method="openSplitEditor"/>
  </action-method>

  <action-method name="action-wkf-model-open-merge-tool-editor">
    <call class="com.axelor.studio.bpm.web.WkfModelController" method="openMergeEditor"/>
  </action-method>

  <action-method name="action-wkf-model-method-import-from-sources">
    <call class="com.axelor.studio.bpm.web.WkfModelController"
      method="importBpmnModelFromSources"/>
  </action-method>
  <action-validate name="action-validate-merge-reqs">
    <alert
      message="Merge operation requires at least 2 models. Please provide multiple models to proceed with the merge."
      if="_ids == null || _ids.size() &lt; 2"/>
  </action-validate>
  <action-validate name="action-validate-split-reqs">
    <alert
      message="Split operation requires exactly one model. Please provide a single model to proceed with the split."
      if="_ids == null || _ids.size() != 1"/>
  </action-validate>

  <action-method name="action-wkf-model-method-generate-expression">
    <call class="com.axelor.studio.web.GroovyExpressionBuilderController"
      method="buildExpression"/>
  </action-method>


  <action-method name="action-wkf-model-method-generate-script">
    <call class="com.axelor.studio.web.GroovyExpressionBuilderController" method="buildScript"/>
  </action-method>

</object-views>
